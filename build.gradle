plugins {
	id "org.springframework.boot"
	id "org.sonarqube"
	id "jacoco"
	id "com.adarshr.test-logger"
	id 'jacoco-report-aggregation'
}

sonar {
	properties {
		property "sonar.organization", "shaolin182-transactions"
		property "sonar.projectKey", "shaolin182-transactions_transactions-sync-process"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.jacoco.reportPaths", "${project.buildDir}/reports/jacoco/codeCoverageReport/"
		property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
	}
}

allprojects {
	group = 'org.transactions'
	version = '0.0.1-SNAPSHOT'

	jacoco {
		toolVersion = '0.8.13'
	}

	repositories {
		mavenCentral()
		mavenLocal()

		// Github Maven Repo
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/shaolin182-transactions/transactions-java")
			credentials {
				username = System.getenv("GITHUB_USERNAME")
				password = System.getenv("GITHUB_TOKEN")
			}
		}
	}

}

subprojects {
	apply plugin: "java"
	apply plugin: "jacoco"
	apply plugin: "io.spring.dependency-management"
	apply plugin: "com.adarshr.test-logger"

	sourceCompatibility = 21
	targetCompatibility = 21

	dependencies {
		testImplementation("org.springframework.boot:spring-boot-starter-test:${property('spring.version')}") {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
		testRuntimeOnly 'org.junit.platform:junit-platform-engine:1.12.2'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.12.2'

	}

	test {
		useJUnitPlatform()
	}
}

project(':api'){
	apply plugin: "org.springframework.boot"

	bootRun {
		jvmArgs = ["-DenvTarget=dev"]
	}

	dependencies {
		implementation project(":sync-service")
		implementation project(":persistence-elasticsearch")
		implementation "org.transactions:common-connector:${property('transaction.version')}"
		implementation "org.springframework.boot:spring-boot-starter"
		implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
		implementation "org.springframework.boot:spring-boot-starter-data-elasticsearch"
		implementation "org.springframework.boot:spring-boot-starter-actuator"

		implementation platform('org.testcontainers:testcontainers-bom:1.21.2') //import bom

		testImplementation "org.testcontainers:junit-jupiter"
		testImplementation "org.testcontainers:elasticsearch"
		testImplementation "org.testcontainers:mongodb"
		// For mocking repository
		testImplementation "org.transactions:persistence-mongodb:${property('transaction.version')}"

	}
}

project (':sync-service') {
	dependencies {
		implementation "org.springframework.boot:spring-boot-starter:${property('spring.version')}"
		implementation "org.transactions:common-connector:${property('transaction.version')}"
		implementation "org.transactions:persistence-mongodb:${property('transaction.version')}"
	}
}

project (':persistence-elasticsearch') {
	dependencies {
		implementation project(":sync-service")

		implementation "org.springframework.boot:spring-boot-starter-data-elasticsearch:${property('spring.version')}"
		implementation "org.springframework.boot:spring-boot-starter:${property('spring.version')}"
		implementation "org.transactions:model:${property('transaction.version')}"

		testImplementation "org.hamcrest:hamcrest:${property('hamcrest-all.version')}"
	}
}
